// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview A hint generation AI agent.
 *
 * - generateHints - A function that handles the hint generation process.
 * - GenerateHintsInput - The input type for the generateHints function.
 * - GenerateHintsOutput - The return type for the generateHints function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateHintsInputSchema = z.object({
  questionText: z.string().optional().describe('The question asked by the student as text.'),
  questionImage: z
    .string()
    .optional()
    .describe(
      "A photo of a question, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
    ),
  questionAudio: z
    .string()
    .optional()
    .describe(
      "An audio recording of a question, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
    ),
});
export type GenerateHintsInput = z.infer<typeof GenerateHintsInputSchema>;

const GenerateHintsOutputSchema = z.object({
  hints: z.array(z.string()).describe('Hints to help the student answer the question.'),
});
export type GenerateHintsOutput = z.infer<typeof GenerateHintsOutputSchema>;

export async function generateHints(input: GenerateHintsInput): Promise<GenerateHintsOutput> {
  return generateHintsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateHintsPrompt',
  input: {schema: GenerateHintsInputSchema},
  output: {schema: GenerateHintsOutputSchema},
  prompt: `You are an expert tutor, skilled at providing hints to students without giving away the answer.

  A student has asked the following question.  Generate a series of hints that will help them solve the problem, starting with the most basic hint and progressing to more specific hints.

  The hints should be designed to help the student think through the problem and arrive at the solution themselves.

  Question (text): {{questionText}}
  {{#if questionImage}}
  Question (image): {{media url=questionImage}}
  {{/if}}
  {{#if questionAudio}}
  Question (audio): {{media url=questionAudio}}
  {{/if}}

  Format your response as a JSON array of strings.
  `,
});

const generateHintsFlow = ai.defineFlow(
  {
    name: 'generateHintsFlow',
    inputSchema: GenerateHintsInputSchema,
    outputSchema: GenerateHintsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
